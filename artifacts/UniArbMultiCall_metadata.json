{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_poolAddressesProvider",
						"type": "address"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ADDRESSES_PROVIDER",
				"outputs": [
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL",
				"outputs": [
					{
						"internalType": "contract IPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "call",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "premium",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "executeOperation",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_pairAddress",
						"type": "address"
					}
				],
				"name": "getReservesByPair",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "reserve0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserve1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "blockTimestampLast",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "receiveTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transferEther",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transferToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_wethAmountToFirstMarket",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_ethAmountToCoinbase",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "_targets",
						"type": "address[]"
					},
					{
						"internalType": "bytes[]",
						"name": "_payloads",
						"type": "bytes[]"
					}
				],
				"name": "uniswapWeth",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
					"params": {
						"amount": "The amount of the flash-borrowed asset",
						"asset": "The address of the flash-borrowed asset",
						"initiator": "The address of the flashloan initiator",
						"params": "The byte-encoded params passed when initiating the flashloan",
						"premium": "The fee of the flash-borrowed asset"
					},
					"returns": {
						"_0": "True if the execution of the operation succeeds, false otherwise"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"notice": "Executes an operation after receiving the flash-borrowed asset"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"my-contracts/BundleExecutor.sol": "UniArbMultiCall"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"my-contracts/BundleExecutor.sol": {
			"keccak256": "0x2defb88800fec01d0443351da7a892d786790d606c667b59eb90a94a6e69fb8a",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://5c1ee8bf89bfd35c5085dcbb561fc00ad7b1627d4aabae482f4411f7218f916e",
				"dweb:/ipfs/QmaH4ndw5TFZPco8JDH7bRDaSAz2ffwCHScbekYvxTeCPU"
			]
		},
		"my-contracts/access/Ownable.sol": {
			"keccak256": "0x04dbc7d12658c1a63b056476ba6c38cbd96c5197c54521bbc64e359c1a8c39b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6dd5cdf62bfbda5011ea1c05256d1d76facff1f3d65896ea02625c528df4ccba",
				"dweb:/ipfs/QmUgWqfFwK7b6Kgcs5ZUuGjiZ7AeuafHii7tXFWmi2iBEB"
			]
		},
		"my-contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol": {
			"keccak256": "0x3a04fc046c4f04c71ff230eba56e56bb718be41e4317f0c938bd287d81e384b1",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://8a02e8f6034e6536269eca55dc4e068e584a67cef530dea865d9a75e0e950ca3",
				"dweb:/ipfs/QmdwL6Wvbk8QAyThNzPkeCfmTUryUdUnkbBDSRs5eigBmj"
			]
		},
		"my-contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol": {
			"keccak256": "0xba50a7834ddfdca3e3cfac09043f72699be42ff88925641ac30950a434b2b2ff",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://588513e813da8c9edf06bdd8912f33f5e304735e4b0145da9fb034eb46f205b5",
				"dweb:/ipfs/Qmco68eeRnTUGyZaoZ9Vu4R7xzH9x1pUwP36nUvrxnxHxg"
			]
		},
		"my-contracts/interfaces/IERC20.sol": {
			"keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
				"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
			]
		},
		"my-contracts/interfaces/IPool.sol": {
			"keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
				"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
			]
		},
		"my-contracts/interfaces/IPoolAddressesProvider.sol": {
			"keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
				"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
			]
		},
		"my-contracts/interfaces/IUniswapV2Pair.sol": {
			"keccak256": "0x420f73512ef8251fc9467484b24ed20fe28dfa09ce8af6462467ad51a98c3642",
			"license": "MIT",
			"urls": [
				"bzz-raw://727384a5870e850f77f31f2bdd99a85808692a22316829f701be0796ec86a399",
				"dweb:/ipfs/QmQPtnN8y186sgpc4w3qesvTXUBGDvKWqsKHWNpVUg9VW5"
			]
		},
		"my-contracts/interfaces/IWETH.sol": {
			"keccak256": "0x4cbfaba60a7088a8c6cccc27d9059d2276eec46c239233f108df9819ca0a5e74",
			"license": "MIT",
			"urls": [
				"bzz-raw://fdf90a02facaee96cfaba97eb3ef9a464ddb9e44a697c79f731be68a3d669ea6",
				"dweb:/ipfs/QmTWjsDMbmLzR9Mfn3rQBVCCg6nEKJ3KkLi6YcZ4mL7Hu9"
			]
		},
		"my-contracts/protocol/libraries/types/DataTypes.sol": {
			"keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
				"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
			]
		},
		"my-contracts/utils/Context.sol": {
			"keccak256": "0x0d984665e4f3dd200c605a83b7caae057dd96136c038fcdd271fd85757dc3d8f",
			"license": "MIT",
			"urls": [
				"bzz-raw://75b72c586f82e3eedbb030ef92494582d7f0d80557c007cebf9a8ec98429d6ec",
				"dweb:/ipfs/QmV4Ltyjuj7B3RVNzjkJbhH3EihmWNb7oikxNj7xwWes4z"
			]
		}
	},
	"version": 1
}