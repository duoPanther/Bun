{
	"id": "0f2078194342f1017d1cf1e301fb5372",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"my-contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\npragma solidity 0.8.10;\n\nimport {Context} from '../utils/Context.sol';\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n   */\n  constructor(address initialOwner) {\n    require(initialOwner != address(0), \"Ownable: invalid owner address\");\n    _transferOwnership(initialOwner);\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    _checkOwner();\n    _;\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view virtual returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if the sender is not the owner.\n   */\n  function _checkOwner() internal view virtual {\n    require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby disabling any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public virtual onlyOwner {\n    _transferOwnership(address(0));\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public virtual onlyOwner {\n    require(newOwner != address(0), \"Ownable: invalid new owner address\");\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Internal function without access restriction.\n   */\n  function _transferOwnership(address newOwner) internal virtual {\n    address oldOwner = _owner;\n    _owner = newOwner;\n    emit OwnershipTransferred(oldOwner, newOwner);\n  }\n}\n"
			},
			"my-contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"my-contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"my-contracts/access/Ownable.sol\":661:2598  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"my-contracts/access/Ownable.sol\":922:1074  constructor(address initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"my-contracts/access/Ownable.sol\":994:995  0 */\n  0x00\n    /* \"my-contracts/access/Ownable.sol\":970:996  initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"my-contracts/access/Ownable.sol\":970:982  initialOwner */\n  dup2\n    /* \"my-contracts/access/Ownable.sol\":970:996  initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"my-contracts/access/Ownable.sol\":962:1031  require(initialOwner != address(0), \"Ownable: invalid owner address\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"my-contracts/access/Ownable.sol\":1037:1069  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"my-contracts/access/Ownable.sol\":1056:1068  initialOwner */\n  dup2\n    /* \"my-contracts/access/Ownable.sol\":1037:1055  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"my-contracts/access/Ownable.sol\":1037:1069  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"my-contracts/access/Ownable.sol\":922:1074  constructor(address initialOwner) {... */\n  pop\n    /* \"my-contracts/access/Ownable.sol\":661:2598  contract Ownable is Context {... */\n  jump(tag_11)\n    /* \"my-contracts/access/Ownable.sol\":2423:2596  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"my-contracts/access/Ownable.sol\":2492:2508  address oldOwner */\n  0x00\n    /* \"my-contracts/access/Ownable.sol\":2511:2517  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"my-contracts/access/Ownable.sol\":2492:2517  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"my-contracts/access/Ownable.sol\":2532:2540  newOwner */\n  dup2\n    /* \"my-contracts/access/Ownable.sol\":2523:2529  _owner */\n  0x00\n  dup1\n    /* \"my-contracts/access/Ownable.sol\":2523:2540  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"my-contracts/access/Ownable.sol\":2582:2590  newOwner */\n  dup2\n    /* \"my-contracts/access/Ownable.sol\":2551:2591  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"my-contracts/access/Ownable.sol\":2572:2580  oldOwner */\n  dup2\n    /* \"my-contracts/access/Ownable.sol\":2551:2591  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"my-contracts/access/Ownable.sol\":2486:2596  {... */\n  pop\n    /* \"my-contracts/access/Ownable.sol\":2423:2596  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_16:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_17:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_16\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_18:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_17\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_19:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_18\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_14\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_19\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_20:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1557   */\ntag_21:\n    /* \"#utility.yul\":1517:1549   */\n  0x4f776e61626c653a20696e76616c6964206f776e657220616464726573730000\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1550   */\n  mstore\n    /* \"#utility.yul\":1377:1557   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1563:1929   */\ntag_22:\n    /* \"#utility.yul\":1705:1708   */\n  0x00\n    /* \"#utility.yul\":1726:1793   */\n  tag_42\n    /* \"#utility.yul\":1790:1792   */\n  0x1e\n    /* \"#utility.yul\":1785:1788   */\n  dup4\n    /* \"#utility.yul\":1726:1793   */\n  tag_20\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1719:1793   */\n  swap2\n  pop\n    /* \"#utility.yul\":1802:1895   */\n  tag_43\n    /* \"#utility.yul\":1891:1894   */\n  dup3\n    /* \"#utility.yul\":1802:1895   */\n  tag_21\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1920:1922   */\n  0x20\n    /* \"#utility.yul\":1915:1918   */\n  dup3\n    /* \"#utility.yul\":1911:1923   */\n  add\n    /* \"#utility.yul\":1904:1923   */\n  swap1\n  pop\n    /* \"#utility.yul\":1563:1929   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1935:2354   */\ntag_8:\n    /* \"#utility.yul\":2101:2105   */\n  0x00\n    /* \"#utility.yul\":2139:2141   */\n  0x20\n    /* \"#utility.yul\":2128:2137   */\n  dup3\n    /* \"#utility.yul\":2124:2142   */\n  add\n    /* \"#utility.yul\":2116:2142   */\n  swap1\n  pop\n    /* \"#utility.yul\":2188:2197   */\n  dup2\n    /* \"#utility.yul\":2182:2186   */\n  dup2\n    /* \"#utility.yul\":2178:2198   */\n  sub\n    /* \"#utility.yul\":2174:2175   */\n  0x00\n    /* \"#utility.yul\":2163:2172   */\n  dup4\n    /* \"#utility.yul\":2159:2176   */\n  add\n    /* \"#utility.yul\":2152:2199   */\n  mstore\n    /* \"#utility.yul\":2216:2347   */\n  tag_45\n    /* \"#utility.yul\":2342:2346   */\n  dup2\n    /* \"#utility.yul\":2216:2347   */\n  tag_22\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2208:2347   */\n  swap1\n  pop\n    /* \"#utility.yul\":1935:2354   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"my-contracts/access/Ownable.sol\":661:2598  contract Ownable is Context {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"my-contracts/access/Ownable.sol\":661:2598  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"my-contracts/access/Ownable.sol\":1861:1956  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"my-contracts/access/Ownable.sol\":1274:1353  function owner() public view virtual returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"my-contracts/access/Ownable.sol\":2095:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"my-contracts/access/Ownable.sol\":1861:1956  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n        /* \"my-contracts/access/Ownable.sol\":1181:1194  _checkOwner() */\n      tag_17\n        /* \"my-contracts/access/Ownable.sol\":1181:1192  _checkOwner */\n      tag_18\n        /* \"my-contracts/access/Ownable.sol\":1181:1194  _checkOwner() */\n      jump\t// in\n    tag_17:\n        /* \"my-contracts/access/Ownable.sol\":1921:1951  _transferOwnership(address(0)) */\n      tag_20\n        /* \"my-contracts/access/Ownable.sol\":1948:1949  0 */\n      0x00\n        /* \"my-contracts/access/Ownable.sol\":1921:1939  _transferOwnership */\n      tag_21\n        /* \"my-contracts/access/Ownable.sol\":1921:1951  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_20:\n        /* \"my-contracts/access/Ownable.sol\":1861:1956  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"my-contracts/access/Ownable.sol\":1274:1353  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"my-contracts/access/Ownable.sol\":1320:1327  address */\n      0x00\n        /* \"my-contracts/access/Ownable.sol\":1342:1348  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"my-contracts/access/Ownable.sol\":1335:1348  return _owner */\n      swap1\n      pop\n        /* \"my-contracts/access/Ownable.sol\":1274:1353  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"my-contracts/access/Ownable.sol\":2095:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n        /* \"my-contracts/access/Ownable.sol\":1181:1194  _checkOwner() */\n      tag_24\n        /* \"my-contracts/access/Ownable.sol\":1181:1192  _checkOwner */\n      tag_18\n        /* \"my-contracts/access/Ownable.sol\":1181:1194  _checkOwner() */\n      jump\t// in\n    tag_24:\n        /* \"my-contracts/access/Ownable.sol\":2199:2200  0 */\n      0x00\n        /* \"my-contracts/access/Ownable.sol\":2179:2201  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"my-contracts/access/Ownable.sol\":2179:2187  newOwner */\n      dup2\n        /* \"my-contracts/access/Ownable.sol\":2179:2201  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"my-contracts/access/Ownable.sol\":2171:2240  require(newOwner != address(0), \"Ownable: invalid new owner address\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"my-contracts/access/Ownable.sol\":2246:2274  _transferOwnership(newOwner) */\n      tag_29\n        /* \"my-contracts/access/Ownable.sol\":2265:2273  newOwner */\n      dup2\n        /* \"my-contracts/access/Ownable.sol\":2246:2264  _transferOwnership */\n      tag_21\n        /* \"my-contracts/access/Ownable.sol\":2246:2274  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"my-contracts/access/Ownable.sol\":2095:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"my-contracts/access/Ownable.sol\":1418:1542  function _checkOwner() internal view virtual {... */\n    tag_18:\n        /* \"my-contracts/access/Ownable.sol\":1488:1500  _msgSender() */\n      tag_31\n        /* \"my-contracts/access/Ownable.sol\":1488:1498  _msgSender */\n      tag_32\n        /* \"my-contracts/access/Ownable.sol\":1488:1500  _msgSender() */\n      jump\t// in\n    tag_31:\n        /* \"my-contracts/access/Ownable.sol\":1477:1500  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"my-contracts/access/Ownable.sol\":1477:1484  owner() */\n      tag_33\n        /* \"my-contracts/access/Ownable.sol\":1477:1482  owner */\n      tag_9\n        /* \"my-contracts/access/Ownable.sol\":1477:1484  owner() */\n      jump\t// in\n    tag_33:\n        /* \"my-contracts/access/Ownable.sol\":1477:1500  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"my-contracts/access/Ownable.sol\":1469:1537  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"my-contracts/access/Ownable.sol\":1418:1542  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"my-contracts/access/Ownable.sol\":2423:2596  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_21:\n        /* \"my-contracts/access/Ownable.sol\":2492:2508  address oldOwner */\n      0x00\n        /* \"my-contracts/access/Ownable.sol\":2511:2517  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"my-contracts/access/Ownable.sol\":2492:2517  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"my-contracts/access/Ownable.sol\":2532:2540  newOwner */\n      dup2\n        /* \"my-contracts/access/Ownable.sol\":2523:2529  _owner */\n      0x00\n      dup1\n        /* \"my-contracts/access/Ownable.sol\":2523:2540  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"my-contracts/access/Ownable.sol\":2582:2590  newOwner */\n      dup2\n        /* \"my-contracts/access/Ownable.sol\":2551:2591  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"my-contracts/access/Ownable.sol\":2572:2580  oldOwner */\n      dup2\n        /* \"my-contracts/access/Ownable.sol\":2551:2591  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"my-contracts/access/Ownable.sol\":2486:2596  {... */\n      pop\n        /* \"my-contracts/access/Ownable.sol\":2423:2596  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"my-contracts/utils/Context.sol\":587:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_32:\n        /* \"my-contracts/utils/Context.sol\":640:655  address payable */\n      0x00\n        /* \"my-contracts/utils/Context.sol\":678:688  msg.sender */\n      caller\n        /* \"my-contracts/utils/Context.sol\":663:689  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"my-contracts/utils/Context.sol\":587:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_39:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_40:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_55\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_41:\n        /* \"#utility.yul\":328:352   */\n      tag_57\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_40\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_59\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_41\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_43:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_45:\n        /* \"#utility.yul\":993:1017   */\n      tag_64\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_40\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_65:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_46:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_67\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_45\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_14:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_70\n      tag_43\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1269:1388   */\n    tag_69:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_71\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_46\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_47:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1924   */\n    tag_48:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f776e61626c653a20696e76616c6964206e6577206f776e6572206164647265\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1912:1916   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1899:1905   */\n      dup3\n        /* \"#utility.yul\":1895:1910   */\n      add\n        /* \"#utility.yul\":1888:1917   */\n      mstore\n        /* \"#utility.yul\":1703:1924   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1930:2296   */\n    tag_49:\n        /* \"#utility.yul\":2072:2075   */\n      0x00\n        /* \"#utility.yul\":2093:2160   */\n      tag_75\n        /* \"#utility.yul\":2157:2159   */\n      0x22\n        /* \"#utility.yul\":2152:2155   */\n      dup4\n        /* \"#utility.yul\":2093:2160   */\n      tag_47\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2086:2160   */\n      swap2\n      pop\n        /* \"#utility.yul\":2169:2262   */\n      tag_76\n        /* \"#utility.yul\":2258:2261   */\n      dup3\n        /* \"#utility.yul\":2169:2262   */\n      tag_48\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2287:2289   */\n      0x40\n        /* \"#utility.yul\":2282:2285   */\n      dup3\n        /* \"#utility.yul\":2278:2290   */\n      add\n        /* \"#utility.yul\":2271:2290   */\n      swap1\n      pop\n        /* \"#utility.yul\":1930:2296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2302:2721   */\n    tag_28:\n        /* \"#utility.yul\":2468:2472   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x20\n        /* \"#utility.yul\":2495:2504   */\n      dup3\n        /* \"#utility.yul\":2491:2509   */\n      add\n        /* \"#utility.yul\":2483:2509   */\n      swap1\n      pop\n        /* \"#utility.yul\":2555:2564   */\n      dup2\n        /* \"#utility.yul\":2549:2553   */\n      dup2\n        /* \"#utility.yul\":2545:2565   */\n      sub\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2530:2539   */\n      dup4\n        /* \"#utility.yul\":2526:2543   */\n      add\n        /* \"#utility.yul\":2519:2566   */\n      mstore\n        /* \"#utility.yul\":2583:2714   */\n      tag_78\n        /* \"#utility.yul\":2709:2713   */\n      dup2\n        /* \"#utility.yul\":2583:2714   */\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2575:2714   */\n      swap1\n      pop\n        /* \"#utility.yul\":2302:2721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:2909   */\n    tag_50:\n        /* \"#utility.yul\":2867:2901   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2863:2864   */\n      0x00\n        /* \"#utility.yul\":2855:2861   */\n      dup3\n        /* \"#utility.yul\":2851:2865   */\n      add\n        /* \"#utility.yul\":2844:2902   */\n      mstore\n        /* \"#utility.yul\":2727:2909   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3281   */\n    tag_51:\n        /* \"#utility.yul\":3057:3060   */\n      0x00\n        /* \"#utility.yul\":3078:3145   */\n      tag_81\n        /* \"#utility.yul\":3142:3144   */\n      0x20\n        /* \"#utility.yul\":3137:3140   */\n      dup4\n        /* \"#utility.yul\":3078:3145   */\n      tag_47\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3071:3145   */\n      swap2\n      pop\n        /* \"#utility.yul\":3154:3247   */\n      tag_82\n        /* \"#utility.yul\":3243:3246   */\n      dup3\n        /* \"#utility.yul\":3154:3247   */\n      tag_50\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3272:3274   */\n      0x20\n        /* \"#utility.yul\":3267:3270   */\n      dup3\n        /* \"#utility.yul\":3263:3275   */\n      add\n        /* \"#utility.yul\":3256:3275   */\n      swap1\n      pop\n        /* \"#utility.yul\":2915:3281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3287:3706   */\n    tag_36:\n        /* \"#utility.yul\":3453:3457   */\n      0x00\n        /* \"#utility.yul\":3491:3493   */\n      0x20\n        /* \"#utility.yul\":3480:3489   */\n      dup3\n        /* \"#utility.yul\":3476:3494   */\n      add\n        /* \"#utility.yul\":3468:3494   */\n      swap1\n      pop\n        /* \"#utility.yul\":3540:3549   */\n      dup2\n        /* \"#utility.yul\":3534:3538   */\n      dup2\n        /* \"#utility.yul\":3530:3550   */\n      sub\n        /* \"#utility.yul\":3526:3527   */\n      0x00\n        /* \"#utility.yul\":3515:3524   */\n      dup4\n        /* \"#utility.yul\":3511:3528   */\n      add\n        /* \"#utility.yul\":3504:3551   */\n      mstore\n        /* \"#utility.yul\":3568:3699   */\n      tag_84\n        /* \"#utility.yul\":3694:3698   */\n      dup2\n        /* \"#utility.yul\":3568:3699   */\n      tag_51\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3560:3699   */\n      swap1\n      pop\n        /* \"#utility.yul\":3287:3706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203d74cc6d27220221cabe59383f52cf95c4f2015094e9b07658e1e0cfd5ae01b464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_123": {
									"entryPoint": 183,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2357:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1298:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1336:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1270:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1275:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1286:11:2",
														"type": ""
													}
												],
												"src": "1202:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:74:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a20696e76616c6964206f776e65722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1517:32:2",
																		"type": "",
																		"value": "Ownable: invalid owner address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:56:2"
														}
													]
												},
												"name": "store_literal_in_memory_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1475:6:2",
														"type": ""
													}
												],
												"src": "1377:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1785:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1790:2:2",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1726:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1719:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1891:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6",
																	"nodeType": "YulIdentifier",
																	"src": "1802:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1802:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1904:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1915:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1904:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1697:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1705:3:2",
														"type": ""
													}
												],
												"src": "1563:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2106:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2116:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2128:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2139:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2124:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2116:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2182:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2188:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2152:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2208:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2342:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2216:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2208:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2086:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2101:4:2",
														"type": ""
													}
												],
												"src": "1935:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: invalid owner address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161072b38038061072b833981810160405281019061003291906101de565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009990610268565b60405180910390fd5b6100b1816100b760201b60201c565b50610288565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ab82610180565b9050919050565b6101bb816101a0565b81146101c657600080fd5b50565b6000815190506101d8816101b2565b92915050565b6000602082840312156101f4576101f361017b565b5b6000610202848285016101c9565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a20696e76616c6964206f776e657220616464726573730000600082015250565b6000610252601e8361020b565b915061025d8261021c565b602082019050919050565b6000602082019050818103600083015261028181610245565b9050919050565b610494806102976000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861009e565b60405161006591906102d6565b60405180910390f35b61008860048036038101906100839190610322565b6100c7565b005b61009261014b565b61009c60006101c9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100cf61014b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561013f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610136906103d2565b60405180910390fd5b610148816101c9565b50565b61015361028d565b73ffffffffffffffffffffffffffffffffffffffff1661017161009e565b73ffffffffffffffffffffffffffffffffffffffff16146101c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101be9061043e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102c082610295565b9050919050565b6102d0816102b5565b82525050565b60006020820190506102eb60008301846102c7565b92915050565b600080fd5b6102ff816102b5565b811461030a57600080fd5b50565b60008135905061031c816102f6565b92915050565b600060208284031215610338576103376102f1565b5b60006103468482850161030d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a20696e76616c6964206e6577206f776e657220616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006103bc60228361034f565b91506103c782610360565b604082019050919050565b600060208201905081810360008301526103eb816103af565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061042860208361034f565b9150610433826103f2565b602082019050919050565b600060208201905081810360008301526104578161041b565b905091905056fea26469706673582212203d74cc6d27220221cabe59383f52cf95c4f2015094e9b07658e1e0cfd5ae01b464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x72B CODESIZE SUB DUP1 PUSH2 0x72B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x288 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB DUP3 PUSH2 0x180 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB DUP2 PUSH2 0x1A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D8 DUP2 PUSH2 0x1B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F4 JUMPI PUSH2 0x1F3 PUSH2 0x17B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x202 DUP5 DUP3 DUP6 ADD PUSH2 0x1C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A20696E76616C6964206F776E657220616464726573730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 PUSH1 0x1E DUP4 PUSH2 0x20B JUMP JUMPDEST SWAP2 POP PUSH2 0x25D DUP3 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281 DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x494 DUP1 PUSH2 0x297 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x322 JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x14B JUMP JUMPDEST PUSH2 0x9C PUSH1 0x0 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x14B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136 SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148 DUP2 PUSH2 0x1C9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x153 PUSH2 0x28D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x171 PUSH2 0x9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP1 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0 DUP3 PUSH2 0x295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FF DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31C DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x338 JUMPI PUSH2 0x337 PUSH2 0x2F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x346 DUP5 DUP3 DUP6 ADD PUSH2 0x30D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A20696E76616C6964206E6577206F776E6572206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC PUSH1 0x22 DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7 DUP3 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EB DUP2 PUSH2 0x3AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428 PUSH1 0x20 DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x433 DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x457 DUP2 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH21 0xCC6D27220221CABE59383F52CF95C4F2015094E9B0 PUSH23 0x58E1E0CFD5AE01B464736F6C634300080A003300000000 ",
							"sourceMap": "661:1937:0:-:0;;;922:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;994:1;970:26;;:12;:26;;;;962:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1037:32;1056:12;1037:18;;;:32;;:::i;:::-;922:152;661:1937;;2423:173;2492:16;2511:6;;;;;;;;;;;2492:25;;2532:8;2523:6;;:17;;;;;;;;;;;;;;;;;;2582:8;2551:40;;2572:8;2551:40;;;;;;;;;;;;2486:110;2423:173;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:180::-;1517:32;1513:1;1505:6;1501:14;1494:56;1377:180;:::o;1563:366::-;1705:3;1726:67;1790:2;1785:3;1726:67;:::i;:::-;1719:74;;1802:93;1891:3;1802:93;:::i;:::-;1920:2;1915:3;1911:12;1904:19;;1563:366;;;:::o;1935:419::-;2101:4;2139:2;2128:9;2124:18;2116:26;;2188:9;2182:4;2178:20;2174:1;2163:9;2159:17;2152:47;2216:131;2342:4;2216:131;:::i;:::-;2208:139;;1935:419;;;:::o;661:1937:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_66": {
									"entryPoint": 331,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_138": {
									"entryPoint": 653,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_123": {
									"entryPoint": 457,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_52": {
									"entryPoint": 158,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_80": {
									"entryPoint": 138,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_103": {
									"entryPoint": 199,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3709:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:2",
														"type": ""
													}
												],
												"src": "593:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:2"
															},
															"nodeType": "YulIf",
															"src": "973:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:2",
														"type": ""
													}
												],
												"src": "920:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:2",
														"type": ""
													}
												],
												"src": "1048:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:2"
															},
															"nodeType": "YulIf",
															"src": "1269:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:2",
														"type": ""
													}
												],
												"src": "1193:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:2",
														"type": ""
													}
												],
												"src": "1528:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a20696e76616c6964206e6577206f776e6572206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:2",
																		"type": "",
																		"value": "Ownable: invalid new owner addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1895:15:2"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:2",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:2",
														"type": ""
													}
												],
												"src": "1703:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2076:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2086:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2152:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2157:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2093:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2086:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2258:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872",
																	"nodeType": "YulIdentifier",
																	"src": "2169:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2169:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2271:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2282:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2287:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2064:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2072:3:2",
														"type": ""
													}
												],
												"src": "1930:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2473:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2483:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2495:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2483:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2530:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2541:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2526:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2549:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2555:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2545:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2545:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2519:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2519:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2575:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2709:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2583:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2575:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2453:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2468:4:2",
														"type": ""
													}
												],
												"src": "2302:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2833:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2855:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2863:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:14:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2867:34:2",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2844:58:2"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2825:6:2",
														"type": ""
													}
												],
												"src": "2727:182:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3137:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3078:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3071:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3243:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3154:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3256:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3267:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3049:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3057:3:2",
														"type": ""
													}
												],
												"src": "2915:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3458:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3468:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3480:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3476:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3468:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3515:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3526:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3511:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3534:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3540:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3504:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3504:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3560:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3694:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3568:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3560:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3438:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3453:4:2",
														"type": ""
													}
												],
												"src": "3287:419:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: invalid new owner addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861009e565b60405161006591906102d6565b60405180910390f35b61008860048036038101906100839190610322565b6100c7565b005b61009261014b565b61009c60006101c9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100cf61014b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561013f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610136906103d2565b60405180910390fd5b610148816101c9565b50565b61015361028d565b73ffffffffffffffffffffffffffffffffffffffff1661017161009e565b73ffffffffffffffffffffffffffffffffffffffff16146101c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101be9061043e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102c082610295565b9050919050565b6102d0816102b5565b82525050565b60006020820190506102eb60008301846102c7565b92915050565b600080fd5b6102ff816102b5565b811461030a57600080fd5b50565b60008135905061031c816102f6565b92915050565b600060208284031215610338576103376102f1565b5b60006103468482850161030d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a20696e76616c6964206e6577206f776e657220616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006103bc60228361034f565b91506103c782610360565b604082019050919050565b600060208201905081810360008301526103eb816103af565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061042860208361034f565b9150610433826103f2565b602082019050919050565b600060208201905081810360008301526104578161041b565b905091905056fea26469706673582212203d74cc6d27220221cabe59383f52cf95c4f2015094e9b07658e1e0cfd5ae01b464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x322 JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x14B JUMP JUMPDEST PUSH2 0x9C PUSH1 0x0 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x14B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136 SWAP1 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148 DUP2 PUSH2 0x1C9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x153 PUSH2 0x28D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x171 PUSH2 0x9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP1 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0 DUP3 PUSH2 0x295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FF DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31C DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x338 JUMPI PUSH2 0x337 PUSH2 0x2F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x346 DUP5 DUP3 DUP6 ADD PUSH2 0x30D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A20696E76616C6964206E6577206F776E6572206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC PUSH1 0x22 DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7 DUP3 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EB DUP2 PUSH2 0x3AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428 PUSH1 0x20 DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x433 DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x457 DUP2 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH21 0xCC6D27220221CABE59383F52CF95C4F2015094E9B0 PUSH23 0x58E1E0CFD5AE01B464736F6C634300080A003300000000 ",
							"sourceMap": "661:1937:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1861:95;;;:::i;:::-;;1274:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2095:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1861:95;1181:13;:11;:13::i;:::-;1921:30:::1;1948:1;1921:18;:30::i;:::-;1861:95::o:0;1274:79::-;1320:7;1342:6;;;;;;;;;;;1335:13;;1274:79;:::o;2095:184::-;1181:13;:11;:13::i;:::-;2199:1:::1;2179:22;;:8;:22;;;;2171:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2246:28;2265:8;2246:18;:28::i;:::-;2095:184:::0;:::o;1418:124::-;1488:12;:10;:12::i;:::-;1477:23;;:7;:5;:7::i;:::-;:23;;;1469:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1418:124::o;2423:173::-;2492:16;2511:6;;;;;;;;;;;2492:25;;2532:8;2523:6;;:17;;;;;;;;;;;;;;;;;;2582:8;2551:40;;2572:8;2551:40;;;;;;;;;;;;2486:110;2423:173;:::o;587:107:1:-;640:15;678:10;663:26;;587:107;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:221::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:4;1907:2;1899:6;1895:15;1888:29;1703:221;:::o;1930:366::-;2072:3;2093:67;2157:2;2152:3;2093:67;:::i;:::-;2086:74;;2169:93;2258:3;2169:93;:::i;:::-;2287:2;2282:3;2278:12;2271:19;;1930:366;;;:::o;2302:419::-;2468:4;2506:2;2495:9;2491:18;2483:26;;2555:9;2549:4;2545:20;2541:1;2530:9;2526:17;2519:47;2583:131;2709:4;2583:131;:::i;:::-;2575:139;;2302:419;;;:::o;2727:182::-;2867:34;2863:1;2855:6;2851:14;2844:58;2727:182;:::o;2915:366::-;3057:3;3078:67;3142:2;3137:3;3078:67;:::i;:::-;3071:74;;3154:93;3243:3;3154:93;:::i;:::-;3272:2;3267:3;3263:12;3256:19;;2915:366;;;:::o;3287:419::-;3453:4;3491:2;3480:9;3476:18;3468:26;;3540:9;3534:4;3530:20;3526:1;3515:9;3511:17;3504:47;3568:131;3694:4;3568:131;:::i;:::-;3560:139;;3287:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "234400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "30376",
								"transferOwnership(address)": "30769"
							},
							"internal": {
								"_checkOwner()": "infinite",
								"_transferOwnership(address)": "27981"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 661,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 994,
									"end": 995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 996,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 970,
									"end": 996,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 970,
									"end": 982,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 970,
									"end": 996,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 970,
									"end": 996,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 970,
									"end": 996,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 970,
									"end": 996,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 962,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1069,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1056,
									"end": 1068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1037,
									"end": 1055,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1037,
									"end": 1055,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1069,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1037,
									"end": 1069,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1069,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1037,
									"end": 1069,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1037,
									"end": 1069,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 922,
									"end": 1074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2423,
									"end": 2596,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2423,
									"end": 2596,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2517,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2532,
									"end": 2540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2529,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2523,
									"end": 2529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2523,
									"end": 2540,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2572,
									"end": 2580,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2551,
									"end": 2591,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2486,
									"end": 2596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2423,
									"end": 2596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2423,
									"end": 2596,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1377,
									"end": 1557,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1377,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1517,
									"end": 1549,
									"name": "PUSH",
									"source": 2,
									"value": "4F776E61626C653A20696E76616C6964206F776E657220616464726573730000"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1494,
									"end": 1550,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1377,
									"end": 1557,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1377,
									"end": 1557,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1563,
									"end": 1929,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1563,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1705,
									"end": 1708,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1726,
									"end": 1793,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1790,
									"end": 1792,
									"name": "PUSH",
									"source": 2,
									"value": "1E"
								},
								{
									"begin": 1785,
									"end": 1788,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1793,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1793,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1726,
									"end": 1793,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1726,
									"end": 1793,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1719,
									"end": 1793,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1719,
									"end": 1793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1802,
									"end": 1895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1891,
									"end": 1894,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1802,
									"end": 1895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1802,
									"end": 1895,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1802,
									"end": 1895,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1802,
									"end": 1895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1920,
									"end": 1922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1915,
									"end": 1918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1911,
									"end": 1923,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1904,
									"end": 1923,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1904,
									"end": 1923,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1563,
									"end": 1929,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1563,
									"end": 1929,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1563,
									"end": 1929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1563,
									"end": 1929,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1935,
									"end": 2354,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1935,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2139,
									"end": 2141,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2128,
									"end": 2137,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2124,
									"end": 2142,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2142,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2142,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2188,
									"end": 2197,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2182,
									"end": 2186,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2198,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2174,
									"end": 2175,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2163,
									"end": 2172,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2159,
									"end": 2176,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2152,
									"end": 2199,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2216,
									"end": 2347,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 2342,
									"end": 2346,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2216,
									"end": 2347,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2216,
									"end": 2347,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2216,
									"end": 2347,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 2216,
									"end": 2347,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2208,
									"end": 2347,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2208,
									"end": 2347,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1935,
									"end": 2354,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1935,
									"end": 2354,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1935,
									"end": 2354,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1935,
									"end": 2354,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 2598,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d74cc6d27220221cabe59383f52cf95c4f2015094e9b07658e1e0cfd5ae01b464736f6c634300080a0033",
									".code": [
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 2598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1181,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1956,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1353,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1181,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2171,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2246,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1418,
											"end": 1542,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1418,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1488,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1477,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1477,
											"end": 1484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1484,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1477,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1469,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1542,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2423,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2423,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2591,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2596,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 587,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 663,
											"end": 689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 587,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1924,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1703,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A20696E76616C6964206E6577206F776E6572206164647265"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1916,
											"name": "PUSH",
											"source": 2,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1924,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1930,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1930,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2152,
											"end": 2155,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2093,
											"end": 2160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2160,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2093,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2258,
											"end": 2261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2169,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2169,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2169,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 2296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 2296,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2302,
											"end": 2721,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2302,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2495,
											"end": 2504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2565,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2709,
											"end": 2713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2583,
											"end": 2714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2714,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2583,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2721,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2727,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2727,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2863,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2902,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2909,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3078,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3243,
											"end": 3246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3154,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3263,
											"end": 3275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3287,
											"end": 3706,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3287,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3526,
											"end": 3527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3511,
											"end": 3528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3694,
											"end": 3698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3568,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3568,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3568,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3706,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3706,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"my-contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"my-contracts/access/Ownable.sol\":{\"keccak256\":\"0x04dbc7d12658c1a63b056476ba6c38cbd96c5197c54521bbc64e359c1a8c39b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dd5cdf62bfbda5011ea1c05256d1d76facff1f3d65896ea02625c528df4ccba\",\"dweb:/ipfs/QmUgWqfFwK7b6Kgcs5ZUuGjiZ7AeuafHii7tXFWmi2iBEB\"]},\"my-contracts/utils/Context.sol\":{\"keccak256\":\"0x0d984665e4f3dd200c605a83b7caae057dd96136c038fcdd271fd85757dc3d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b72c586f82e3eedbb030ef92494582d7f0d80557c007cebf9a8ec98429d6ec\",\"dweb:/ipfs/QmV4Ltyjuj7B3RVNzjkJbhH3EihmWNb7oikxNj7xwWes4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "my-contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"my-contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"my-contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"my-contracts/utils/Context.sol\":{\"keccak256\":\"0x0d984665e4f3dd200c605a83b7caae057dd96136c038fcdd271fd85757dc3d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b72c586f82e3eedbb030ef92494582d7f0d80557c007cebf9a8ec98429d6ec\",\"dweb:/ipfs/QmV4Ltyjuj7B3RVNzjkJbhH3EihmWNb7oikxNj7xwWes4z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"my-contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "my-contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							150
						],
						"Ownable": [
							124
						]
					},
					"id": 125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"absolutePath": "my-contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 151,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 150,
										"src": "681:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "681:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "173:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								150
							],
							"name": "Ownable",
							"nameLocation": "670:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "709:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 124,
									"src": "693:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "693:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 14,
									"name": "OwnershipTransferred",
									"nameLocation": "726:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "763:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "747:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "794:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "778:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:57:0"
									},
									"src": "720:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "956:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 21,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "970:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "994:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "986:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 22,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "986:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "986:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "970:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a20696e76616c6964206f776e65722061646472657373",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "998:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6",
																"typeString": "literal_string \"Ownable: invalid owner address\""
															},
															"value": "Ownable: invalid owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b29e9a4ee494350dc2f47460bd60fa8df6af10d8f9289b41e477bcf5d3fb4b6",
																"typeString": "literal_string \"Ownable: invalid owner address\""
															}
														],
														"id": 20,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "962:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "962:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1056:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 30,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1037:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1037:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "1037:32:0"
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "808:111:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "942:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "934:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:22:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:0:0"
									},
									"scope": 124,
									"src": "922:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1175:31:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 38,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1181:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1181:13:0"
											},
											{
												"id": 41,
												"nodeType": "PlaceholderStatement",
												"src": "1200:1:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1078:73:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 43,
									"name": "onlyOwner",
									"nameLocation": "1163:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:2:0"
									},
									"src": "1154:52:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1329:24:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1342:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 48,
												"id": 50,
												"nodeType": "Return",
												"src": "1335:13:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1210:61:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1283:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1319:9:0"
									},
									"scope": 124,
									"src": "1274:79:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1463:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 57,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "1477:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1477:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "1488:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1488:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1477:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1502:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1469:68:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "1357:58:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1427:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1463:0:0"
									},
									"scope": 124,
									"src": "1418:124:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1915:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1948:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1940:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 73,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1940:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1940:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1921:30:0"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "1546:312:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 69,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 43,
												"src": "1905:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1905:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1870:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1887:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1915:0:0"
									},
									"scope": 124,
									"src": "1861:95:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2165:114:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2179:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2199:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2191:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2191:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2191:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2179:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a20696e76616c6964206e6577206f776e65722061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2203:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872",
																"typeString": "literal_string \"Ownable: invalid new owner address\""
															},
															"value": "Ownable: invalid new owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71c0571b94738b0ebf809b00fffe2057a309f0c89017f133eded2be61e6e2872",
																"typeString": "literal_string \"Ownable: invalid new owner address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2171:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2265:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2246:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2246:28:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1960:132:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 43,
												"src": "2155:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2155:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2104:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2130:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2122:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2165:0:0"
									},
									"scope": 124,
									"src": "2095:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "2486:110:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2500:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "2492:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2492:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"id": 111,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "2511:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2492:25:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2523:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 114,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2532:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2523:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "2523:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 118,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2572:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 119,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2582:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2551:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "2546:45:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2283:137:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2432:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:18:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:0:0"
									},
									"scope": 124,
									"src": "2423:173:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 125,
							"src": "661:1937:0",
							"usedErrors": []
						}
					],
					"src": "101:2498:0"
				},
				"id": 0
			},
			"my-contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "my-contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							150
						]
					},
					"id": 151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 126,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150
							],
							"name": "Context",
							"nameLocation": "575:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "657:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 133,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "678:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "678:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "670:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 131,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "670:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "670:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 130,
												"id": 136,
												"nodeType": "Return",
												"src": "663:26:1"
											}
										]
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "596:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "640:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:17:1"
									},
									"scope": 150,
									"src": "587:107:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "763:155:1",
										"statements": [
											{
												"expression": {
													"id": 143,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "769:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$150",
														"typeString": "contract Context"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "769:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 145,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 142,
												"id": 147,
												"nodeType": "Return",
												"src": "898:15:1"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "707:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:2:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "749:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 140,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:14:1"
									},
									"scope": 150,
									"src": "698:220:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 151,
							"src": "557:363:1",
							"usedErrors": []
						}
					],
					"src": "32:889:1"
				},
				"id": 1
			}
		}
	}
}